"""init migration

Revision ID: cbb75fb098fa
Revises: 
Create Date: 2024-09-15 13:35:33.580636

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "cbb75fb098fa"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "provider",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_provider_id"), "provider", ["id"], unique=False)
    op.create_table(
        "site",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("provider_id", sa.String(), nullable=True),
        sa.Column("WGS84_lat", sa.Float(), nullable=False),
        sa.Column("WGS84_lon", sa.Float(), nullable=False),
        sa.ForeignKeyConstraint(
            ["provider_id"],
            ["provider.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_site_id"), "site", ["id"], unique=False)
    op.create_table(
        "logger",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("active", sa.Boolean(), nullable=False),
        sa.Column("site_id", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["site_id"],
            ["site.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_logger_id"), "logger", ["id"], unique=False)
    op.create_table(
        "logger_data",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("logger_id", sa.String(), nullable=True),
        sa.Column("timestamp", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["logger_id"],
            ["logger.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_logger_data_id"), "logger_data", ["id"], unique=False)
    op.create_table(
        "pressure_logger_data",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("pressure", sa.Float(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"],
            ["logger_data.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "temperature_logger_data",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("temperature", sa.Float(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"],
            ["logger_data.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("temperature_logger_data")
    op.drop_table("pressure_logger_data")
    op.drop_index(op.f("ix_logger_data_id"), table_name="logger_data")
    op.drop_table("logger_data")
    op.drop_index(op.f("ix_logger_id"), table_name="logger")
    op.drop_table("logger")
    op.drop_index(op.f("ix_site_id"), table_name="site")
    op.drop_table("site")
    op.drop_index(op.f("ix_provider_id"), table_name="provider")
    op.drop_table("provider")
    # ### end Alembic commands ###
